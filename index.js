console.log(" ");
console.log("                                               ‚ñì‚ñì‚ñì‚ñì‚ñì");
console.log("                                         ‚ñì‚ñì             ‚ñì‚ñì");
console.log("                                      ‚ñì       ‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì   ‚ñì");
console.log("                                    ‚ñì      ‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì     ‚ñì");
console.log("                                  ‚ñì       ‚ñì‚ñì‚ñì‚ñì‚ñì ‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì          ‚ñì");
console.log("                                 ‚ñì       ‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì          ‚ñì");
console.log("                                ‚ñì        ‚ñì‚ñì‚ñì‚ñì ‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì ‚ñì        ‚ñì");
console.log("                                ‚ñì       ‚ñì‚ñì‚ñì‚ñì  ‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì        ‚ñì");
console.log("                               ‚ñì         ‚ñì‚ñì         ‚ñì‚ñì‚ñì‚ñì‚ñì          ‚ñì");
console.log("                               ‚ñì         ‚ñì‚ñì    ‚ñì‚ñì‚ñì‚ñì‚ñì  ‚ñì‚ñì‚ñì‚ñì         ‚ñì");
console.log("                               ‚ñì         ‚ñì‚ñì‚ñí   ‚ñì‚ñì ‚ñì     ‚ñì ‚ñì        ‚ñì");
console.log("                                ‚ñì             ‚ñì‚ñì‚ñì‚ñì ‚ñì‚ñì‚ñì‚ñì     ‚ñì     ‚ñì");
console.log("                                ‚ñì     ‚ñì  ‚ñì  ‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì ‚ñì‚ñì    ‚ñì ‚ñì‚ñì‚ñì    ‚ñì");
console.log("                                 ‚ñì  ‚ñì‚ñí‚ñì ‚ñì ‚ñì ‚ñì‚ñì       ‚ñì‚ñì     ‚ñì‚ñì‚ñì  ‚ñì");
console.log("                                  ‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì ‚ñì‚ñì‚ñì‚ñì  ‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì ‚ñì‚ñì    ‚ñì‚ñì ‚ñì");
console.log("                                    ‚ñì‚ñì ‚ñì‚ñì‚ñì  ‚ñì‚ñì‚ñì‚ñì ‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì   ‚ñì‚ñì");
console.log("                                      ‚ñì‚ñì‚ñì‚ñì  ‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì ‚ñì‚ñì ‚ñì");
console.log("                                         ‚ñì‚ñì‚ñì ‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì  ‚ñì‚ñì");
console.log("                                               ‚ñì‚ñì‚ñì‚ñì‚ñì");
console.log(" ");
console.log("---------------------------------------------------------------------------------------------------");
console.log("::::'###::::'########:'##::::'##:'########:'##::: ##::::'###:::::::'########:::'#######::'########:");
console.log(":::'## ##:::... ##..:: ##:::: ##: ##.....:: ###:: ##:::'## ##:::::: ##.... ##:'##.... ##:... ##..::");
console.log("::'##:. ##::::: ##:::: ##:::: ##: ##::::::: ####: ##::'##:. ##::::: ##:::: ##: ##:::: ##:::: ##::::");
console.log(":'##:::. ##:::: ##:::: #########: ######::: ## ## ##:'##:::. ##:::: ########:: ##:::: ##:::: ##::::");
console.log(": #########:::: ##:::: ##.... ##: ##...:::: ##. ####: #########:::: ##.... ##: ##:::: ##:::: ##::::");
console.log(": ##.... ##:::: ##:::: ##:::: ##: ##::::::: ##:. ###: ##.... ##:::: ##:::: ##: ##:::: ##:::: ##::::");
console.log(": ##:::: ##:::: ##:::: ##:::: ##: ########: ##::. ##: ##:::: ##:::: ########::. #######::::: ##::::");
console.log("::..:::::..:::::..:::::..:::::..::........::..::::..::..:::::..:::::........::::.......::::::..::::");
console.log("------------------------------------[ Les Jeunes IHEDN - 2023 ]------------------------------------");
console.log(" ");
console.log("Bot started");

// Initialisation des autorisations Discord
const Discord = require("discord.js");
const Client = new Discord.Client({
    intents: [
        Discord.Intents.FLAGS.GUILDS,
        Discord.Intents.FLAGS.GUILD_MESSAGES,
        Discord.Intents.FLAGS.GUILD_MESSAGE_REACTIONS,
        Discord.Intents.FLAGS.GUILD_MEMBERS,
    ]
});

// Initialisation des autorisations Make/Integromat
const XMLHttpRequest = require("xmlhttprequest").XMLHttpRequest;
var http = new XMLHttpRequest();
var fs = require('fs');
var url = fs.readFileSync('Webhook_link.txt','utf8');
var method = 'POST';

// Variables fonctionnelles
const emailvalidator = require("email-validator");
var RoleID_visiteur = fs.readFileSync('RoleID_visiteur.txt','utf8');
//var RoleID_int√©gration = fs.readFileSync('RoleID_int√©gration.txt','utf8');
var RoleID_membre = fs.readFileSync('RoleID_membre.txt','utf8');
var RoleID_controleur = fs.readFileSync('RoleID_controleur.txt','utf8');
var ChannelID_Welcome = fs.readFileSync('ChannelID_Welcome.txt','utf8');
var ChannelID_Roles = fs.readFileSync('ChannelID_Roles.txt','utf8');
var ChannelID_Rules = fs.readFileSync('ChannelID_Rules.txt','utf8');
var ChannelID_Controle = fs.readFileSync('ChannelID_Controle.txt','utf8');
var GuildID = fs.readFileSync('GuildID.txt','utf8');

var guild = 0;
var memberID = 0;

const embed_welcome = new Discord.MessageEmbed()
.setTitle("Bienvenue sur le serveur des Jeunes IHEDN")
.setDescription("Bonjour, vous √™tes bien arriv√©s sur le serveur Discord de l'association des Jeunes IHEDN. Je vais vous guider pas √† pas pour acc√©der √† la communaut√©.")
.addFields(
    { name: "√âtape 1", value: "Afin de vous identifier, merci de renseigner votre adresse email pour proc√©der au contr√¥le de votre cotisation (Cet email correspond √† celui indiqu√© lors de votre paiement sur HelloAsso)." },)
.setImage("https://media.giphy.com/media/ygBB0CrnoRTDrzIrdG/giphy-downsized-large.gif")
.setFooter({ text: "L'usurpation d'identit√© est √©videmment interdite." });

const embed_rules = new Discord.MessageEmbed()
.setTitle("R√®gles du serveur !")
.setDescription("**√âtape 3** Acceptez le r√®glement du serveur des Jeunes IHEDN ci-dessous pour acc√©der √† l'int√©gralit√© du serveur")
.addFields(
    { name: "Engagement", value: "Le statut de membre du serveur implique le respect des [statuts et du r√®glement int√©rieur](https://www.jeunes-ihedn.org/informations-administratives/) de l‚Äôassociation." },
    { name: "Compte", value: "Votre identit√© ne doit pas √™tre confondue avec celle d'une autre personne. L'usurpation d'identit√© √©tant √©videmment interdite." },
    { name: "G√©n√©ralit√©", value: "Le respect √©tant l'une des bases primordiales de la communication interpersonnelle, nous vous demandons d'√™tre le plus poli, courtois et correct possible envers les autres membres." },
    { name: "Expression", value: "Les propos discriminatoires (racistes, sexistes, x√©nophobe, lgbt-phobe...), √† caract√®re pornographique ou incitant √† la haine et/ou √† la violence sont proscrits." },
    { name: "Salons", value: "L'abus de messages, par spam, flood ou majuscules est prohib√© et tout manquement au r√®glement fera l'objet d'une sanction pouvant aller du rappel √† l'ordre au ban du serveur." },
    { name: "Rappel", value: "Les [Conditions d'Utilisation de Discord](https://discord.com/terms) et la [Charte d‚ÄôUtilisation de la Communaut√© Discord](https://discord.com/guidelines) s'appliquent √† tous les serveurs, dont celui-ci." },
    { name: "Aide", value: "Si vous avez besoin d'aide, ouvrez un ticket dans le canal <#949665174883803196> et un administrateur prendra contact avec vous" },)
.setImage("https://c.tenor.com/EsQ7Ahmi_L4AAAAC/oss117-oss.gif")
.setFooter({ text: "Pour accepter le r√®glement du serveur veuillez interagir avec la r√©action ci-dessous ! ‚úÖ" });

const embed_controle = new Discord.MessageEmbed()
.setTitle("Espace de contr√¥le des membres")
.setDescription("Afin de proc√©der au contr√¥le de cotisation d'un membre, merci de renseigner son adresse email. Vous pouvez √©galement v√©rifier un membre du serveur en renseignant son ID [Aide](https://support.discord.com/hc/fr/articles/206346498-O%C3%B9-trouver-l-ID-de-mon-compte-utilisateur-serveur-message).")
.addFields(
    { name: "V√©rification group√©e", value: "Si vous voulez contr√¥ler une liste de personnes rapidement, vous pouvez √©galement utiliser [ce service](https://tally.so/r/wv5r83)." },)
.setImage("https://media.giphy.com/media/fovdbgAA1vQ6A/giphy.gif")
.setFooter({ text: "Pour information, tous les membres pr√©sents sur le Discord sont √† jour de cotisation" });

const embed_roles = new Discord.MessageEmbed()
.setTitle("Espace d'int√©gration √† une entit√©")
.setDescription("Afin d'autoriser, √† un membre (r√¥le <@&"+RoleID_membre+">), l'acc√®s √† une entit√© sous votre responsabilit√© (üëë), merci de renseigner ci-dessous l'ID Discord de l'utilisateur (visible avec le mode d√©veloppeur activ√©).")
.addFields(
    { name: "Trouver l'ID", value: "Sur mobile, il vous suffit de cliquer sur son profil, puis sur "+'"'+"Copier l'identifiant"+'"'+". Sur PC, il vous faut r√©aliser un clic droit sur son profil, puis sur "+'"'+"Copier l'identifiant"+'"'+"." },
    { name: "Mode d√©veloppeur", value: "Pour activer ce mode, rendez-vous dans les param√®tres de votre profil, puis dans "+'"'+"Apparence"+'"'+" sur mobile ou "+'"'+"Avanc√©s"+'"'+" sur PC. [Aide](https://support.discord.com/hc/fr/articles/206346498-O%C3%B9-trouver-l-ID-de-mon-compte-utilisateur-serveur-message)" },
    { name: "Liste de vos membres", value: "Vous pouvez g√©n√©rer facilement la liste de vos membres Discord via [ce service](https://tally.so/r/nGe7Wo)." },)
.setImage("https://media.giphy.com/media/WEYLWp4RrzTAiOFt7V/giphy.gif")
.setFooter({ text: "Les acc√®s plus √©lev√©s (Cadre, Mod√©rateur ...) se demandent aupr√®s des mod√©rateurs, via le canal ‚ùî„Éªsupport-discord"});

// Connexion √† l'interface Discord du bot
Client.login("xxxxxxxxxxx_cl√© identification du botxxxxxxxxxxxxxxx");
Client.on("ready", () => {
    console.log("Bot online !");
    Client.user.setActivity('un podcast Fort √âclair', { type: 'LISTENING' });
    Client.channels.cache.get(ChannelID_Welcome).send({ embeds: [embed_welcome]});
    console.log("Welcome published");
    Client.channels.cache.get(ChannelID_Rules).send({ embeds: [embed_rules]});
    console.log("Rules published");
    Client.channels.cache.get(ChannelID_Roles).send({ embeds: [embed_roles]});
    console.log("Roles published");
    Client.channels.cache.get(ChannelID_Controle).send({ embeds: [embed_controle]});
    console.log("Controle published");
    console.log(url);
    guild = Client.guilds.cache.get(GuildID);
});

Client.on("messageCreate", message => {
    // Filtrage bot
    if (message.author.bot) return;
    // Channel de v√©rification
    if (message.channel.id === ChannelID_Welcome) {
        // R√¥le visiteur uniquement
        if (message.member.roles.cache.has(RoleID_visiteur)) {
            // Contr√¥le si email correct
            if (emailvalidator.validate(message.content)) {
                message.react("üîç");
                message.reply("V√©rification de votre cotisation en cours...")
                .then(msg => {
                    setTimeout(() => msg.delete()
                                    .then()
                                    .catch(console.error)
                                    , 5000)
                })
                .catch(console.error);
                setTimeout(() => message.delete()
                                .then()
                                .catch(console.error)
                                , 5000)
                var data = {
                    channel_id: message.channel.id,
                    user_message_id: message.id,
                    author_id: message.author.id,
                    content: message.content.toLowerCase(),            
                    request_type: "NEW"
                };
                var jsonString = JSON.stringify(data);

                http.open(method, url);
                http.setRequestHeader("Content-Type", "application/json");
                http.send(jsonString);
                http = new XMLHttpRequest();
            } else {
                message.react("‚ùå");
                message.reply("Merci de renseigner uniquement un email afin de proc√©der √† la v√©rification.")
                .then(msg => {
                    setTimeout(() => msg.delete()
                                    .then()
                                    .catch(console.error)
                                    , 10000)
                })
                .catch(console.error);
                setTimeout(() => message.delete()
                                .then()
                                .catch(console.error)
                                , 5000)
            }
        } else {
            message.react("‚õî");
            message.reply("Bonjour, vous n'√™tes pas autoris√© √† utiliser ce service.")
            .then(msg => {
               setTimeout(() => msg.delete()
                                .then()
                                .catch(console.error)
                                , 5000)
            })
            .catch(console.error);
            setTimeout(() => message.delete()
                            .then()
                            .catch(console.error)
                            , 5000)
        }
    // Channel contr√¥le
    } else if (message.channel.id === ChannelID_Controle) {
        // R√¥le contr√¥leur uniquement
        if (message.member.roles.cache.has(RoleID_controleur)) {
            // Contr√¥le si email correct
            if (emailvalidator.validate(message.content)) {
                message.react("‚úÖ");
                message.reply("Bonjour, je vais proc√©der √† la v√©rification de la cotisation de cette personne.")
                .then(msg => {
                    setTimeout(() => msg.delete()
                                    .then()
                                    .catch(console.error)
                                    , 10000)
                })
                .catch(console.error);
                setTimeout(() => message.delete()
                                .then()
                                .catch(console.error)
                                , 5000)
                var data = {
                    channel_id: message.channel.id,
                    user_message_id: message.id,
                    author_id: message.author.id,
                    content: message.content.toLowerCase(),            
                    request_type: "CHECK"
                };
                var jsonString = JSON.stringify(data);

                http.open(method, url);
                http.setRequestHeader("Content-Type", "application/json");
                http.send(jsonString);
                http = new XMLHttpRequest();
            } else {
                // Recherche de l'utilisateur avec son ID
                guild.members.fetch(message.content).then((user) => {
				    memberID = user;
				    message.react("‚úÖ");
                    message.reply("Bonjour, je vais proc√©der √† la recherche d'informations sur cette personne.")
                    .then(msg => {
                        setTimeout(() => msg.delete()
                                        .then()
                                        .catch(console.error)
                                        , 10000)
                    })
                    .catch(console.error);
                    setTimeout(() => message.delete()
                                    .then()
                                    .catch(console.error)
                                    , 5000)
                    var data = {
                        channel_id: message.channel.id,
                        user_message_id: message.id,
                        author_id: message.author.id,
                        content: message.content,            
                        request_type: "CHECK_ID"
                    };
                    var jsonString = JSON.stringify(data);

                    http.open(method, url);
                    http.setRequestHeader("Content-Type", "application/json");
                    http.send(jsonString);
                    http = new XMLHttpRequest();
                }).catch(error => {
                    // Si l'ID n'existe pas sur ce serveur
                    memberID = 0;
                    message.react("‚ùå");
                    message.reply("Bonjour, merci de renseigner **un email** √† v√©rifier ou **l'ID d'un membre** du serveur uniquement. Vous pouvez aussi demander de l"+"'"+"aide aupr√®s des mod√©rateurs, via le canal <#949665174883803196>")
                    .then(msg => {
                        setTimeout(() => msg.delete()
                                        .then()
                                        .catch(console.error)
                                        , 10000)
                    })
                    .catch(console.error);
                    setTimeout(() => message.delete()
                                    .then()
                                    .catch(console.error)
                                    , 5000)
                })
            }
        } else {
            message.react("‚õî");
            message.reply("Bonjour, vous n'√™tes pas autoris√© √† utiliser ce service.")
            .then(msg => {
                setTimeout(() => msg.delete()
                                .then()
                                .catch(console.error)
                                , 5000)
            })
            .catch(console.error);
            setTimeout(() => message.delete()
                            .then()
                            .catch(console.error)
                            , 5000)
        }
    // Channel r√¥les
    } else if (message.channel.id === ChannelID_Roles) {
        // R√¥le contr√¥leur uniquement
        if (message.member.roles.cache.has(RoleID_controleur)) {
            // Recherche de l'utilisateur avec son ID
            guild.members.fetch(message.content).then((user) => {
                memberID = user;
                // Utilisateur membre uniquement
                if (memberID.roles.cache.has(RoleID_membre)) {
                    message.react("‚úÖ");
                    // Recherche du (premier) r√¥le de responsabilit√© de l'auteur (contenants l'emoji üëë)
                    var author = guild.members.cache.get(message.author.id);
                    var respo_role = author.roles.cache.find(respo_role => respo_role.name.includes("üëë"));
                    if (respo_role === undefined) {
                        message.reply('L'+"'"+'ID est correct, malheureusement, vous n'+"'"+'√™tes pas responsable d'+"'"+'un groupe (üëë) pour donner des droits. Vous pouvez demander de l'+"'"+'aide aupr√®s des mod√©rateurs, via le canal <#949665174883803196>')
                            .then(msg => {
                                memberID = 0;
                                setTimeout(() => msg.delete()
                                                .then()
                                                .catch(console.error)
                                                , 10000)
                            })
                            .catch(console.error);
                            setTimeout(() => message.delete()
                                            .then()
                                            .catch(console.error)
                                            , 5000)
                    } else {
                        // R√©cup√©rer l'emoji du r√¥le en √©vitant une erreur de lecture
                        var emoji = String.fromCodePoint(respo_role.name.codePointAt(0));
                        // Trouver le r√¥le enfant li√© √† cet emoji
                        var member_role = guild.roles.cache.find(member_role => member_role.name.startsWith(emoji) && !member_role.name.includes("üëë"));
                        if (member_role === undefined) {
                            memberID = 0;
                            message.reply("Il n'existe pas de r√¥le enfant associ√© √† la responsabilit√© " + '"' + respo_role.name + '".  Vous pouvez demander de l'+"'"+'aide aupr√®s des mod√©rateurs, via le canal <#949665174883803196>')
                            .then(msg => {
                                setTimeout(() => msg.delete()
                                                .then()
                                                .catch(console.error)
                                                , 10000)
                            })
                            .catch(console.error);
                            setTimeout(() => message.delete()
                                           .then()
                                           .catch(console.error)
                                            , 5000)
                        } else {
                            // Cr√©er le menu de s√©lection
                            var row = new Discord.MessageActionRow()
                                .addComponents(
                                new Discord.MessageSelectMenu()
                                    .setCustomId('select')
                                    .setPlaceholder('Liste des r√¥les')
                                    .addOptions(
                                        {
                                            label: member_role.name,
                                            value: member_role.id,
                                        },
                                        {
                                            label: respo_role.name,
                                            value: respo_role.id,
                                        },
                                    ),
                                );
                                message.reply({content: ('S√©lectionner le r√¥le que vous souhaitez associer √† **<@' + memberID + '>** dans le menu ci-dessous :'), components: [row]})
                                .then(msg => {
                                    setTimeout(() => msg.delete()
                                                    .then()
                                                    .catch(console.error)
                                                    , 10000)
                                })
                                .catch(console.error);
                                setTimeout(() => message.delete()
                                                .then()
                                                .catch(console.error)
                                                , 10000)
                        }
                    }
                } else {
                    message.react("‚õî");
                    message.reply("L'utilisateur n'a pas termin√© son int√©gration au serveur. Ce service est r√©serv√© au role <@&"+RoleID_membre+">")
                    .then(msg => {
                        setTimeout(() => msg.delete()
                                        .then()
                                        .catch(console.error)
                                        , 5000)
                    })
                    .catch(console.error);
                    setTimeout(() => message.delete()
                                    .then()
                                    .catch(console.error)
                                    , 5000)
                }
            }).catch(error => {
                // Si l'ID n'existe pas sur ce serveur
                memberID = 0;
                message.react("‚ùå");
                message.reply("Bonjour, merci de renseigner uniquement **l'ID d'un membre** du serveur (voir tuto ci-dessus). Vous pouvez aussi demander de l"+"'"+"aide aupr√®s des mod√©rateurs, via le canal <#949665174883803196>")
                .then(msg => {
                    setTimeout(() => msg.delete()
                                    .then()
                                    .catch(console.error)
                                    , 10000)
                })
                .catch(console.error);
                setTimeout(() => message.delete()
                                .then()
                                .catch(console.error)
                                , 5000)
            })
        } else {
            message.react("‚õî");
            message.reply("Bonjour, vous n'√™tes pas autoris√© √† utiliser ce service.")
            .then(msg => {
                setTimeout(() => msg.delete()
                                .then()
                                .catch(console.error)
                                , 5000)
            })
            .catch(console.error);
            setTimeout(() => message.delete()
                            .then()
                            .catch(console.error)
                            , 5000)
        }
    }
});

Client.on("messageReactionAdd", (reaction, user) => {   
    // Filtrage bot
    if (user.bot) return;
    // Channel des r√®gles
    if (reaction.message.channel.id === ChannelID_Rules) {
        // Contr√¥le si validation
        if (reaction.emoji.name === "‚úÖ") {
            var data = {
                channel_id: ChannelID_Rules,
                user_message_id: " ",
                author_id: user.id,
                content: " ",            
                request_type: "RULES"
            };
            var jsonString = JSON.stringify(data);
                
            http.open(method, url);
            http.setRequestHeader("Content-Type", "application/json");
            http.send(jsonString);
            http = new XMLHttpRequest();
        }
    }
});

Client.on("interactionCreate", interaction => {
    // Channel des r√¥les
    if (interaction.channel.id === ChannelID_Roles) {
        if(interaction.isSelectMenu()){
            if(interaction.customId ==="select"){
                try {
                    var role= memberID.guild.roles.cache.find(role => role.id === interaction.values[0]);
                    memberID.roles.add(role);
                    interaction.update({content: ('‚úÖ Le r√¥le ' + role.name + ' a √©t√© ajout√© !')})
                    memberID = 0;  
                } catch (error) {
                    console.log(error);
                }
            }
        }
    }
})